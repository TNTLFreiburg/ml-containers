on:
  push:
    branches:
      - development
    tags:
      - 'v*'

jobs:
  base:
    env:
      container-name: base

    runs-on: [self-hosted, linux]

    steps:
      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: cr.nail.science
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_TOKEN }}

      - name: Build ${{ env.container-name }}
        uses: TNTLFreiburg/gh-build-container@main
        with:
          image-name: ${{ env.container-name }}

  conda:
    needs: base
    env:
      container-name: conda

    runs-on: [self-hosted, linux]

    steps:
      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: cr.nail.science
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_TOKEN }}

      - name: Build ${{ env.container-name }}
        uses: TNTLFreiburg/gh-build-container@main
        with:
          image-name: ${{ env.container-name }}

  python-job:
    needs: conda
    env:
      container-name: python-job

    runs-on: [self-hosted, linux]

    steps:
      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: cr.nail.science
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_TOKEN }}

      - name: Build ${{ env.container-name }}
        uses: TNTLFreiburg/gh-build-container@main
        with:
          image-name: ${{ env.container-name }}

  pytorch:
    if: false
    needs: conda
    env:
      container-name: pytorch

    runs-on: [self-hosted, linux]

    steps:
      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: cr.nail.science
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_TOKEN }}

      - name: Build ${{ env.container-name }}
        uses: TNTLFreiburg/gh-build-container@main
        with:
          image-name: ${{ env.container-name }}

  jupyter:
    needs: conda
    env:
      container-name: jupyter

    runs-on: [self-hosted, linux]

    steps:
      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: cr.nail.science
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_TOKEN }}

      - name: Build ${{ env.container-name }}
        uses: TNTLFreiburg/gh-build-container@main
        with:
          image-name: ${{ env.container-name }}

  pytorch-job:
    if: false
    needs: pytorch
    env:
      container-name: pytorch-job

    runs-on: [self-hosted, linux]

    steps:
      - name: Login to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: cr.nail.science
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_TOKEN }}

      - name: Build ${{ env.container-name }}
        uses: TNTLFreiburg/gh-build-container@main
        with:
          image-name: ${{ env.container-name }}
          working-dir: python-job
          dockerfile: Dockerfile.pytorch
